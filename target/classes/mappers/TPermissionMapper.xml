<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mytest.teainfoims.dao.TPermissionMapper">
  <resultMap id="BaseResultMap" type="com.mytest.teainfoims.vo.TPermission">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="module_id" jdbcType="INTEGER" property="moduleId" />
    <result column="acl_value" jdbcType="VARCHAR" property="aclValue" />
    <result column="create_time" jdbcType="DATE" property="createTime" />
    <result column="update_time" jdbcType="DATE" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, role_id, module_id, acl_value, create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.mytest.teainfoims.vo.TPermissionExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_permission
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_permission
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.mytest.teainfoims.vo.TPermissionExample">
    delete from t_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.mytest.teainfoims.vo.TPermission">
    insert into t_permission (id, role_id, module_id, 
      acl_value, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{moduleId,jdbcType=INTEGER}, 
      #{aclValue,jdbcType=VARCHAR}, #{createTime,jdbcType=DATE}, #{updateTime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.mytest.teainfoims.vo.TPermission">
    insert into t_permission
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="moduleId != null">
        module_id,
      </if>
      <if test="aclValue != null">
        acl_value,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null">
        #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="aclValue != null">
        #{aclValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.mytest.teainfoims.vo.TPermissionExample" resultType="java.lang.Integer">
    select count(*) from t_permission
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_permission
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.roleId != null">
        role_id = #{record.roleId,jdbcType=INTEGER},
      </if>
      <if test="record.moduleId != null">
        module_id = #{record.moduleId,jdbcType=INTEGER},
      </if>
      <if test="record.aclValue != null">
        acl_value = #{record.aclValue,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=DATE},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_permission
    set id = #{record.id,jdbcType=INTEGER},
      role_id = #{record.roleId,jdbcType=INTEGER},
      module_id = #{record.moduleId,jdbcType=INTEGER},
      acl_value = #{record.aclValue,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=DATE},
      update_time = #{record.updateTime,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.mytest.teainfoims.vo.TPermission">
    update t_permission
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="moduleId != null">
        module_id = #{moduleId,jdbcType=INTEGER},
      </if>
      <if test="aclValue != null">
        acl_value = #{aclValue,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=DATE},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=DATE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.mytest.teainfoims.vo.TPermission">
    update t_permission
    set role_id = #{roleId,jdbcType=INTEGER},
      module_id = #{moduleId,jdbcType=INTEGER},
      acl_value = #{aclValue,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=DATE},
      update_time = #{updateTime,jdbcType=DATE}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <!-- 查询角色拥有的所有的资源ID的集合 -->
  <select id="queryRoleHasModuleIdsByRoleId" parameterType="int" resultType="java.lang.Integer">
    select
      module_id
    from
      t_permission
    where
      role_id = #{roleId}
  </select>

  <!-- 通过角色ID查询权限记录 -->
  <select id="countPermissionByRoleId" parameterType="int" resultType="java.lang.Integer">
    select
      count(1)
    from
      t_permission
    where
      role_id = #{roleId}
  </select>


  <!-- 通过角色ID删除权限记录 -->
  <delete id="deletePermissionByRoleId" parameterType="int">
    delete from
      t_permission
    where
      role_id = #{roleId}
  </delete>

  <!-- 批量添加 -->
  <insert id="insertBatch">
    insert  into
    t_permission (role_id,module_id,acl_value,create_time,update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.roleId},#{item.moduleId},#{item.aclValue},now(),now())
    </foreach>
  </insert>

  <!-- 查询角色拥有的所有的资源ID的集合 -->
<!--  <select id="queryRoleHasModuleIdsByRoleId" parameterType="int" resultType="java.lang.Integer">
    select
      module_id
    from
      t_permission
    where
      role_id = #{roleId}
  </select>-->

  <!-- 通过用户ID查询对应的资源列表（资源权限码） -->
  <select id="queryUserHasRoleHasPermissionByUserIdAndRoleId" resultType="java.lang.String">
    SELECT DISTINCT
      acl_value
    FROM
      t_user_role ur
        LEFT JOIN t_permission p ON ur.roleid = p.role_id
    WHERE
      ur.userid = #{userId} and ur.roleid=#{roleId}
  </select>


  <!-- 通过资源ID查询权限记录 -->
<!--  <select id="countPermissionByModuleId" parameterType="int" resultType="java.lang.Integer">
    select
      count(1)
    from
      t_permission
    where
      module_id=#{id}
  </select>-->

  <!-- 通过资源ID删除权限记录 -->
<!--  <delete id="deletePermissionByModuleId" parameterType="int">
    delete from
      t_permission
    where
      module_id=#{id}
  </delete>-->
</mapper>